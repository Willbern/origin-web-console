apiVersion: v1
kind: Template
labels:
  template: prometheus
message: |-
  Prometheus has been deployed.
metadata:
  annotations:
    description: prometheus.
    iconClass: icon-git
    openshift.io/display-name: Prometheus
    tags: quickstart,promethus,dataman
    template.openshift.io/documentation-url: https://hub.docker.com/r/prom/prometheus/
    template.openshift.io/long-description: Prometheus.
    template.openshift.io/provider-display-name: Dataman, Inc.
    template.openshift.io/support-url: https://hub.docker.com/r/prom/prometheus/
  name: prometheus
objects:
- apiVersion: v1
  kind: RoleBinding
  metadata:
    name: prometheus
  roleRef:
    name: admin
  subjects:
  - name: prometheus
    kind: ServiceAccount
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: prometheus
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        serviceAccount: prometheus
        containers:
          - image: ""
            imagePullPolicy: Always
            name: prometheus
            ports:
              - containerPort: 9090
                protocol: TCP
            volumeMounts:
              - mountPath: /etc/prometheus/
                name: prom-config-example-volume
        restartPolicy: Always
        volumes:
          - configMap:
              defaultMode: 420
              name: ${APP_NAME}
            name: prom-config-example-volume
    test: false
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - prometheus
          from:
            kind: ImageStreamTag
            name: 'prometheus:latest'
            namespace: 'openshift'
        type: ImageChange

- apiVersion: v1
  data:
    prometheus.yml: |
      global:
        scrape_interval:     5s
        evaluation_interval: 5s

      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']

        - job_name: 'octopus-api'
          kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - ${NAMESPACE}
          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_label_type]
            action: keep
            regex: ^octopus-api$
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

        - job_name: 'squid-console'
          kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - ${NAMESPACE}
          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_label_type]
            action: keep
            regex: ^squid-console$
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

        - job_name: 'octopus-executor'
          kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - ${NAMESPACE}
          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__meta_kubernetes_pod_label_type]
            action: keep
            regex: ^octopus-executor$
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

        - job_name: 'squid-executor'
          kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - ${NAMESPACE}
          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__meta_kubernetes_pod_label_type]
            action: keep
            regex: ^squid-executor$
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
  kind: ConfigMap
  metadata:
    name: ${APP_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
      - name: 9090-tcp
        port: 9090
        protocol: TCP
        targetPort: 9090
    selector:
      deploymentconfig: ${APP_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    host: ${APP_NAME}-${NAMESPACE}.apps.dev.dataman.com
    port:
      targetPort: 9090-tcp
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None
parameters:
- description: Current Project Name.
  displayName: Current Project Name
  name: NAMESPACE
  required: true
  value: ''
- description: Application Name.
  displayName: Application Name
  name: APP_NAME
  required: true
  value: 'prometheus'



